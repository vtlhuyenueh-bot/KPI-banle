import streamlit as st
import pandas as pd
import plotly.express as px

# =========================
# C·∫§U H√åNH CHUNG
# =========================
st.set_page_config(page_title="KPI Tracker", layout="wide")

st.title("üìä B·∫£ng theo d√µi KPI nh√≥m")

# =========================
# T·∫†O 2 TAB
# =========================
tab1, tab2 = st.tabs(["üìÇ Import KPI Data", "üìà Dashboard"])

# =========================
# TAB 1: IMPORT D·ªÆ LI·ªÜU
# =========================
with tab1:
    st.header("T·∫£i file KPI")

    uploaded_file = st.file_uploader("Upload Excel (.xlsx)", type=["xlsx"])

    if uploaded_file:
        try:
            df = pd.read_excel(uploaded_file)
            st.success("‚úÖ File ƒë√£ t·∫£i th√†nh c√¥ng")
            st.dataframe(df.head())

            # G·ª£i √Ω map t√™n c·ªôt
            columns = df.columns.tolist()

            col_chitieu = st.selectbox("Ch·ªçn c·ªôt Ch·ªâ ti√™u", columns)
            col_kehoach = st.selectbox("Ch·ªçn c·ªôt K·∫ø ho·∫°ch", columns)
            col_thuchien = st.selectbox("Ch·ªçn c·ªôt Th·ª±c hi·ªán", columns)

            # L∆∞u v√†o session_state
            st.session_state["data"] = {
                "df": df,
                "cols": {
                    "Ch·ªâ ti√™u": col_chitieu,
                    "K·∫ø ho·∫°ch": col_kehoach,
                    "Th·ª±c hi·ªán": col_thuchien
                }
            }

        except Exception as e:
            st.error(f"L·ªói khi ƒë·ªçc file: {e}")

# =========================
# TAB 2: DASHBOARD KPI
# =========================
with tab2:
    st.header("Dashboard KPI")

    if "data" in st.session_state:
        df = st.session_state["data"]["df"]
        cols = st.session_state["data"]["cols"]

        # Chu·∫©n h√≥a l·∫°i t√™n c·ªôt
        df_chart = df[[cols["Ch·ªâ ti√™u"], cols["K·∫ø ho·∫°ch"], cols["Th·ª±c hi·ªán"]]]
        df_chart = df_chart.rename(columns={
            cols["Ch·ªâ ti√™u"]: "Ch·ªâ ti√™u",
            cols["K·∫ø ho·∫°ch"]: "K·∫ø ho·∫°ch",
            cols["Th·ª±c hi·ªán"]: "Th·ª±c hi·ªán"
        })

        # Hi·ªÉn th·ªã th·ªëng k√™
        st.subheader("üìå T·ªïng quan d·ªØ li·ªáu")
        st.write(f"S·ªë d√≤ng d·ªØ li·ªáu: {df_chart.shape[0]}")
        st.write(f"S·ªë c·ªôt d·ªØ li·ªáu: {df_chart.shape[1]}")

        # V·∫Ω bi·ªÉu ƒë·ªì
        st.subheader("üìä So s√°nh K·∫ø ho·∫°ch vs Th·ª±c hi·ªán")
        fig = px.bar(
            df_chart,
            x="Ch·ªâ ti√™u",
            y=["K·∫ø ho·∫°ch", "Th·ª±c hi·ªán"],
            barmode="group",
            text_auto=True,
            color_discrete_sequence=["#636EFA", "#EF553B"]
        )
        st.plotly_chart(fig, use_container_width=True)

        # T√≠nh % ho√†n th√†nh
        df_chart["% Ho√†n th√†nh"] = (df_chart["Th·ª±c hi·ªán"] / df_chart["K·∫ø ho·∫°ch"] * 100).round(2)
        st.subheader("üìà T·ª∑ l·ªá ho√†n th√†nh (%)")
        st.dataframe(df_chart)

    else:
        st.warning("‚ö†Ô∏è Vui l√≤ng import file ·ªü tab 'Import KPI Data' tr∆∞·ªõc.")
